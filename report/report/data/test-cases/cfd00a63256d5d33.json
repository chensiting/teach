{
  "uid" : "cfd00a63256d5d33",
  "name" : "新增课程用例",
  "fullName" : "test_Lesson.TestLesson#test_add_lesson[{\"name\":\"大学英语009\",\"desc\":\"大学英语课程\",\"display_idx\":\"a4\"}\n-{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\lib\\\\common.py\\\", line 69, in dispatch\\n    return handler(request, *args, **kwargs)\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\apps\\\\mgr\\\\handlers\\\\mgr.py\\\", line 156, in handle_add_course\\n    return  JsonResponse(Course.add(data))\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\services\\\\datamodel\\\\common\\\\models.py\\\", line 86, in add\\n    display_idx=data['display_idx'])\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 417, in create\\n    obj.save(force_insert=True, using=self.db)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 729, in save\\n    force_update=force_update, update_fields=update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 759, in save_base\\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 842, in _save_table\\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 880, in _do_insert\\n    using=using, raw=raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 1125, in _insert\\n    return query.get_compiler(using=using).execute_sql(return_id)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1283, in execute_sql\\n    for sql, params in self.as_sql():\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in as_sql\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in <listcomp>\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1235, in <listcomp>\\n    ",
  "historyId" : "e640f45ad32c79bf7a617e05b04260e1",
  "time" : {
    "start" : 1605360724942,
    "stop" : 1605360724950,
    "duration" : 8
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 2 == 500",
  "statusTrace" : "self = <testCaseTeach.test_Lesson.TestLesson object at 0x043613B0>\ninData = '{\"name\":\"大学英语009\",\"desc\":\"大学英语课程\",\"display_idx\":\"a4\"}\\n'\nrepsData = '{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\\\n  File \\\\\"G:\\\\\\\\SQ\\\\u8d44\\\\u6599\\\\u533a\\\\\\\\\\\\u677e\\\\..., line 1826, in get_prep_value\\\\n    return int(value)\\\\nValueError: invalid literal for int() with base 10: \\'\\'\\\\n\"}'\n\n    @pytest.mark.lesson_add\n    # 标签--- 正常运行全部跑，只运行一个pytest test_Lesson.py -s -m=add  多个用逗号隔开\n    @pytest.mark.parametrize('inData,repsData', get_excelData('2-课程模块', 2, 26, 6, 8))\n    @allure.story(\"新增课程\")   #二级标题\n    @allure.title(\"新增课程用例\")  #某个接口标签\n    def test_add_lesson(self,inData,repsData):\n        res = LessonClass().addcourse(self.session,inData)\n>       assert json.loads(res)[\"retcode\"] == json.loads(repsData)[\"retcode\"]\nE       assert 2 == 500\n\ntest_Lesson.py:27: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "delete_all_lesson",
    "time" : {
      "start" : 1605360722243,
      "stop" : 1605360723450,
      "duration" : 1207
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1605360723450,
      "stop" : 1605360723751,
      "duration" : 301
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "delete_all_lesson::fin",
    "time" : {
      "start" : 1605360725530,
      "stop" : 1605360725530,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1605360725528,
      "stop" : 1605360725528,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "课程模块"
  }, {
    "name" : "story",
    "value" : "新增课程"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "lesson_add"
  }, {
    "name" : "tag",
    "value" : "Lesson(order=2)"
  }, {
    "name" : "suite",
    "value" : "test_Lesson"
  }, {
    "name" : "subSuite",
    "value" : "TestLesson"
  }, {
    "name" : "host",
    "value" : "2Q7E3JCM2F8I91T"
  }, {
    "name" : "thread",
    "value" : "5724-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_Lesson"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "inData",
    "value" : "'{\"name\":\"大学英语009\",\"desc\":\"大学英语课程\",\"display_idx\":\"a4\"}\n'"
  }, {
    "name" : "repsData",
    "value" : "'{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\lib\\\\common.py\\\", line 69, in dispatch\\n    return handler(request, *args, **kwargs)\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\apps\\\\mgr\\\\handlers\\\\mgr.py\\\", line 156, in handle_add_course\\n    return  JsonResponse(Course.add(data))\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\services\\\\datamodel\\\\common\\\\models.py\\\", line 86, in add\\n    display_idx=data['display_idx'])\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 417, in create\\n    obj.save(force_insert=True, using=self.db)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 729, in save\\n    force_update=force_update, update_fields=update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 759, in save_base\\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 842, in _save_table\\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 880, in _do_insert\\n    using=using, raw=raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 1125, in _insert\\n    return query.get_compiler(using=using).execute_sql(return_id)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1283, in execute_sql\\n    for sql, params in self.as_sql():\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in as_sql\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in <listcomp>\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1235, in <listcomp>\\n    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1175, in prepare_value\\n    value = field.get_db_prep_save(value, connection=self.connection)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 767, in get_db_prep_save\\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 762, in get_db_prep_value\\n    value = self.get_prep_value(value)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 1826, in get_prep_value\\n    return int(value)\\nValueError: invalid literal for int() with base 10: ''\\n\"}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "40d02532566ffadb",
      "status" : "broken",
      "statusDetails" : "requests.exceptions.ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=80): Max retries exceeded with url: /api/mgr/loginReq (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x03A8A890>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。',))",
      "time" : {
        "start" : 1605360694658,
        "stop" : 1605360694658,
        "duration" : 0
      }
    }, {
      "uid" : "e09c31cc7d32840c",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 2 == 500",
      "time" : {
        "start" : 1605193729392,
        "stop" : 1605193729398,
        "duration" : 6
      }
    }, {
      "uid" : "33742b531e23d8ae",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 2 == 500",
      "time" : {
        "start" : 1605192774444,
        "stop" : 1605192774448,
        "duration" : 4
      }
    }, {
      "uid" : "1f9a13f36d9a11ee",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 2 == 500",
      "time" : {
        "start" : 1605192049598,
        "stop" : 1605192049603,
        "duration" : 5
      }
    }, {
      "uid" : "b88439ca9e08db6e",
      "status" : "broken",
      "statusDetails" : "requests.exceptions.ConnectionError: HTTPConnectionPool(host='127.0.0.1', port=80): Max retries exceeded with url: /api/mgr/loginReq (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x043308B0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。',))",
      "time" : {
        "start" : 1605192026407,
        "stop" : 1605192026407,
        "duration" : 0
      }
    }, {
      "uid" : "b9f52f95f19e6e9a",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 2 == 500",
      "time" : {
        "start" : 1605191855949,
        "stop" : 1605191855955,
        "duration" : 6
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "lesson_add", "Lesson(order=2)" ]
  },
  "source" : "cfd00a63256d5d33.json",
  "parameterValues" : [ "'{\"name\":\"大学英语009\",\"desc\":\"大学英语课程\",\"display_idx\":\"a4\"}\n'", "'{\"retcode\": 500, \"reason\": \"Traceback (most recent call last):\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\lib\\\\common.py\\\", line 69, in dispatch\\n    return handler(request, *args, **kwargs)\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\apps\\\\mgr\\\\handlers\\\\mgr.py\\\", line 156, in handle_add_course\\n    return  JsonResponse(Course.add(data))\\n  File \\\"G:\\\\SQ\\u8d44\\u6599\\u533a\\\\\\u677e\\u52e4\\u81ea\\u52a8\\u5316\\u8bfe\\u7a0b\\\\Web-API\\u8bfe\\u7a0b\\\\\\u5b89\\u88c5\\u6587\\u4ef6\\\\restapi-teach\\\\backend\\\\services\\\\datamodel\\\\common\\\\models.py\\\", line 86, in add\\n    display_idx=data['display_idx'])\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 417, in create\\n    obj.save(force_insert=True, using=self.db)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 729, in save\\n    force_update=force_update, update_fields=update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 759, in save_base\\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 842, in _save_table\\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\base.py\\\", line 880, in _do_insert\\n    using=using, raw=raw)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\manager.py\\\", line 82, in manager_method\\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\\\", line 1125, in _insert\\n    return query.get_compiler(using=using).execute_sql(return_id)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1283, in execute_sql\\n    for sql, params in self.as_sql():\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in as_sql\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1236, in <listcomp>\\n    for obj in self.query.objs\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1235, in <listcomp>\\n    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\compiler.py\\\", line 1175, in prepare_value\\n    value = field.get_db_prep_save(value, connection=self.connection)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 767, in get_db_prep_save\\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 762, in get_db_prep_value\\n    value = self.get_prep_value(value)\\n  File \\\"E:\\\\Python3.6.4-Tool\\\\lib\\\\site-packages\\\\django\\\\db\\\\models\\\\fields\\\\__init__.py\\\", line 1826, in get_prep_value\\n    return int(value)\\nValueError: invalid literal for int() with base 10: ''\\n\"}'" ]
}