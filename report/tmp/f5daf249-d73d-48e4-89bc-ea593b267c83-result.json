{"name": "test_add_lesson[{ \"name\":\"大学英语\",\"desc\":\"大学英语课程\",\"display_idx\":\"4\"}-{\"retcode\": 2, \"reason\": \"同名课程已经存在\"}]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 2", "trace": "self = <testCaseTeach.test_Lesson.TestLesson object at 0x000002E29D303860>\ninData = '{ \"name\":\"大学英语\",\"desc\":\"大学英语课程\",\"display_idx\":\"4\"}', repsData = '{\"retcode\": 2, \"reason\": \"同名课程已经存在\"}'\n\n    @pytest.mark.lesson_add\n    # 标签--- 正常运行全部跑，只运行一个pytest test_Lesson.py -s -m=add  多个用逗号隔开\n    @pytest.mark.parametrize('inData,repsData', get_excelData('2-课程模块', 2, 26, 6, 8))\n    def test_add_lesson(self,inData,repsData):\n        res = LessonClass().addcourse(self.session,inData)\n>       assert json.loads(res)[\"retcode\"] == json.loads(repsData)[\"retcode\"]\nE       assert 0 == 2\n\ntest_Lesson.py:25: AssertionError"}, "parameters": [{"name": "inData", "value": "'{ \"name\":\"大学英语\",\"desc\":\"大学英语课程\",\"display_idx\":\"4\"}'"}, {"name": "repsData", "value": "'{\"retcode\": 2, \"reason\": \"同名课程已经存在\"}'"}], "start": 1605163332539, "stop": 1605163332564, "uuid": "f922f08d-c30a-4f9b-a7f5-4e75aea6f817", "historyId": "e2cae2a1b7e1ed1cb58e3d80fea4433c", "testCaseId": "013e3f7553ea91fbf9cb6d1b5c158191", "fullName": "test_Lesson.TestLesson#test_add_lesson", "labels": [{"name": "feature", "value": "课程模块"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "lesson_add"}, {"name": "tag", "value": "Lesson(order=2)"}, {"name": "suite", "value": "test_Lesson"}, {"name": "subSuite", "value": "TestLesson"}, {"name": "host", "value": "BLD-04728"}, {"name": "thread", "value": "40304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Lesson"}]}